{"version":3,"sources":["ui/pokemon/cmp-pokemon.js","ui/search/cmp-search.js","ui/page/cmp-page.js","ui/page/cnt-page.js","actions/pokemons.js","reducers/pokemons.js","reducers/index.js","index.js","store/configure-store.js"],"names":["Pokemon","pokemon","this","props","className","type","style","backgroundImage","id","name","PureComponent","Search","onChange","value","placeholder","autoFocus","Page","state","searchString","pokemonsIds","error","handleSearch","event","currentTarget","toLowerCase","trim","collection","hardtack","set","maxAge","setState","Object","keys","filter","pokemonId","includes","getPokemons","then","action","payload","message","get","isFetched","pokemons","map","key","Component","mapDispatchToProps","options","dispatch","limit","RSAA","endpoint","method","types","connect","initialState","combineReducers","results","reduce","accumulator","item","url","substring","length","store","middlewares","thunkMiddleware","apiMiddleware","composeEnhancers","compose","createStore","rootReducer","applyMiddleware","configureStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.44b3ce6e.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\n\r\nclass Pokemon extends PureComponent {\r\n  render() {\r\n    const { pokemon } = this.props\r\n\r\n    return (\r\n      <div className=\"pokemon\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"pokemon__sprite\"\r\n          style={{\r\n            backgroundImage: `url(${`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n              pokemon.id\r\n            }.png`})`\r\n          }}\r\n        />\r\n        <p className=\"pokemon__name\">{pokemon.name}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pokemon\r\n","import React from 'react'\r\n\r\nconst Search = ({ onChange, value }) => (\r\n  <input\r\n    type=\"text\"\r\n    onChange={onChange}\r\n    value={value}\r\n    placeholder=\"Enter pokemon name...\"\r\n    autoFocus\r\n  />\r\n)\r\n\r\nexport default Search\r\n","import React, { Component } from 'react'\r\nimport hardtack from 'hardtack'\r\nimport Pokemon from '../pokemon/cmp-pokemon'\r\nimport Search from '../search/cmp-search'\r\n\r\nclass Page extends Component {\r\n  state = {\r\n    searchString: '',\r\n    pokemonsIds: [],\r\n    error: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getPokemons().then(action => {\r\n      if (action.error) {\r\n        return this.setState({\r\n          error: action.payload.message\r\n        })\r\n      }\r\n\r\n      const searchString = hardtack.get('searchString')\r\n      const { collection } = this.props\r\n\r\n      if (!searchString) {\r\n        return this.setState({\r\n          pokemonsIds: Object.keys(collection)\r\n        })\r\n      }\r\n\r\n      const pokemonsIds = Object.keys(collection).filter(pokemonId => {\r\n        const pokemon = collection[pokemonId]\r\n\r\n        return pokemon.name.includes(searchString)\r\n      })\r\n\r\n      this.setState({\r\n        pokemonsIds,\r\n        searchString\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSearch = event => {\r\n    const value = event.currentTarget.value.toLowerCase().trim()\r\n    const { collection } = this.props\r\n\r\n    hardtack.set('searchString', value, {\r\n      maxAge: '31536000'\r\n    })\r\n\r\n    if (value === '') {\r\n      return this.setState({\r\n        pokemonsIds: Object.keys(collection),\r\n        searchString: value\r\n      })\r\n    }\r\n\r\n    const pokemonsIds = Object.keys(collection).filter(pokemonId => {\r\n      const pokemon = collection[pokemonId]\r\n\r\n      return pokemon.name.includes(value)\r\n    })\r\n\r\n    this.setState({\r\n      pokemonsIds,\r\n      searchString: value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { searchString, pokemonsIds, error } = this.state\r\n    const { collection, isFetched } = this.props\r\n\r\n    const pokemons = pokemonsIds.map(pokemonId => {\r\n      const pokemon = collection[pokemonId]\r\n\r\n      return (\r\n        <li className=\"pokemons__item\" key={pokemon.id}>\r\n          <Pokemon pokemon={pokemon} />\r\n        </li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"page\">\r\n        {error && <div className=\"page__error\">{error}</div>}\r\n        <div className=\"page__search\">\r\n          <Search onChange={this.handleSearch} value={searchString} />\r\n        </div>\r\n        {isFetched ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <ul className=\"pokemons\">{pokemons}</ul>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Page\r\n","import { connect } from 'react-redux'\r\nimport { getPokemons } from '../../actions/pokemons'\r\nimport Page from './cmp-page'\r\n\r\nfunction mapStateToProps(state) {\r\n  const { collection } = state.pokemons\r\n\r\n  return {\r\n    collection\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getPokemons\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Page)\r\n","import { RSAA } from 'redux-api-middleware'\r\n\r\nexport const GET_POKEMONS_REQUEST = 'GET_POKEMONS_REQUEST'\r\nexport const GET_POKEMONS_SUCCESS = 'GET_POKEMONS_SUCCESS'\r\nexport const GET_POKEMONS_FAILURE = 'GET_POKEMONS_FAILURE'\r\n\r\nexport const getPokemons = (options = {}) => dispatch => {\r\n  const { limit = 784 } = options\r\n\r\n  return dispatch({\r\n    [RSAA]: {\r\n      endpoint: `https://pokeapi.co/api/v2/pokemon/?limit=${limit}`,\r\n      method: 'GET',\r\n      types: [\r\n        'GET_POKEMONS_REQUEST',\r\n        'GET_POKEMONS_SUCCESS',\r\n        'GET_POKEMONS_FAILURE'\r\n      ]\r\n    }\r\n  })\r\n}\r\n","import {\r\n  GET_POKEMONS_REQUEST,\r\n  GET_POKEMONS_SUCCESS,\r\n  GET_POKEMONS_FAILURE\r\n} from '../actions/pokemons'\r\n\r\nconst initialState = {\r\n  collection: {},\r\n  isFetched: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POKEMONS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetched: true\r\n      }\r\n\r\n    case GET_POKEMONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        collection: {\r\n          ...state.collection,\r\n          ...action.payload.results.reduce((accumulator, item) => {\r\n            const { url } = item\r\n            const id = url.substring(34, url.length - 1)\r\n\r\n            return {\r\n              ...accumulator,\r\n              [id]: {\r\n                id,\r\n                ...item\r\n              }\r\n            }\r\n          }, {})\r\n        },\r\n        isFetched: false\r\n      }\r\n\r\n    case GET_POKEMONS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetched: false\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport pokemons from './pokemons'\r\n\r\nexport default combineReducers({\r\n  pokemons\r\n})\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport Page from './ui/page/cnt-page'\r\nimport configureStore from './store/configure-store'\r\nimport './style/main.css'\r\nif (process.env.NODE_ENV === 'production') {\r\n  import('topping/toppingRelay')\r\n}\r\n\r\nconst store = configureStore()\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <Page />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { apiMiddleware } from 'redux-api-middleware'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from '../reducers'\r\n\r\nexport default function configureStore(initialState = {}) {\r\n  const middlewares = [thunkMiddleware, apiMiddleware]\r\n\r\n  let composeEnhancers = compose\r\n\r\n  if (process.env.NODE_ENV === 'development') {\r\n    if ('__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' in window) {\r\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    }\r\n\r\n    const loggerMiddleware = createLogger()\r\n    middlewares.push(loggerMiddleware)\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  )\r\n}\r\n"],"sourceRoot":""}